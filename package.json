{
  "name": "root",
  "description": "Essential packages to build, release, and run great software",
  "private": true,
  "scripts": {
    "audit": "npm audit && lerna --no-bail exec --ignore $npm_package_config_lerna_ignore -- npm audit",
    "audit:prod": "npm audit --only=prod && lerna --no-bail exec --ignore $npm_package_config_lerna_ignore -- npm audit --only=prod",
    "audit:fix:prod": "export $(cat .env | xargs) && scripts/lerna/audit-fix.sh",
    "docs:build": "npm run docs:build:api && cd docs && npm run build",
    "docs:build:api": "npx jsdoc2md packages/gve/**/src/**/*.js > docs/docs/api.md",
    "postdocs:build:api": "echo \"---\nid: api\ntitle: API\nsidebar_position: 4\n---\n$(cat $npm_package_config_docsApi)\" > $npm_package_config_docsApi",
    "docs:serve": "cd docs && npm run serve",
    "docs:dev:serve": "cd docs && npx docusaurus start",
    "predocs:jsdoc": "mkdir -p output/jsdoc/docs",
    "docs:jsdoc": "jsdoc -c ./.jsdoc.json -R ./README.md -r packages/gve/**/src -d output/jsdoc/docs",
    "predocs:dox": "mkdir -p output/dox/docs",
    "docs:dox": "doxdox packages/gve/**/src --layout bootstrap --output output/dox/docs/index.html",
    "git:commit": "cz",
    "lerna:ci": "npm ci && lerna clean --yes && lerna bootstrap",
    "lerna:version": "npx lerna version --conventional-commits --no-push",
    "lerna:push": "npm run lerna:push:origin",
    "lerna:push:origin": "git push --follow-tags origin main",
    "lerna:push:upstream": "git push --follow-tags upstream main",
    "lerna:publish": "lerna publish from-package",
    "licenses": "license-checker --csv --production > output/licenses.csv",
    "licenses:gpl": "license-checker --production | grep GPL",
    "lint": "eslint '**/{scripts,src,test}/**/*.{js,json}'",
    "outdated": "npm outdated && lerna exec --ignore $npm_package_config_lerna_ignore -- npm outdated",
    "outdated:prod": "npm outdated --only=prod && lerna exec --ignore $npm_package_config_lerna_ignore -- npm outdated --only=prod",
    "postinstall": "cd docs && npm i && cd ..",
    "prepare": "husky install",
    "talisman:checksum": "scripts/talisman/scan-cli.sh",
    "talisman:scan": "scripts/talisman/scan.sh",
    "talisman:view": "scripts/talisman/view.sh",
    "talisman:precommit": "${TALISMAN_HOME}/talisman_hook_script pre-commit",
    "talisman:prepush": "${TALISMAN_HOME}/talisman_hook_script pre-push",
    "test": "lerna run test"
  },
  "author": "Matt Norris <matnorri@cisco.com>",
  "license": "Apache-2.0",
  "devDependencies": {
    "@babel/core": "^7.15.8",
    "@babel/eslint-parser": "^7.15.8",
    "commitizen": "^4.1.2",
    "doxdox": "^3.0.0",
    "jsdoc": "^3.6.7",
    "jsdoc-to-markdown": "^7.0.1",
    "netlify-cli": "^4.4.2",
    "cz-lerna-changelog": "^2.0.3",
    "eslint": "^7.32.0",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-sonar": "^0.5.1",
    "husky": "^7.0.2",
    "lerna": "^3.22.1",
    "prettier": "^2.4.1",
    "typescript": "^4.4.3"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-lerna-changelog"
    },
    "docsApi": "docs/docs/api.md",
    "lerna": {
      "ignore": "@gve/bridge"
    },
    "reports": {
      "path": "./output/reports"
    },
    "talisman": "${TALISMAN_HOME}/talisman_darwin_amd64"
  },
  "dependencies": {
    "license-checker": "^25.0.1"
  },
  "husky": {
    "hooks": {
      "prepare-commit-msg": "exec < /dev/tty && git cz --hook || true"
    }
  }
}
